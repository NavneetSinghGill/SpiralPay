//
//  LockAccountWorker.swift
//  SpiralPay
//
//  Created by Zoeb on 06/04/18.
//  Copyright (c) 2018 EnvisionWorld. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias lockAccountResponseHandler = (_ response: LockAccount.LockAccount.Response) ->()

class LockAccountWorker
{
    func postLockAccountWith(request: LockAccount.LockAccount.Request, successCompletionHandler: @escaping lockAccountResponseHandler, failureCompletionHandler: @escaping lockAccountResponseHandler)
    {
        RequestManager().lockAccount(request: request.baseRequest()) { (status, response) in
            self.handleLockAccountResponse(success: successCompletionHandler, fail: failureCompletionHandler, status: status, response: response)
        }
        
    }
    
    //MARK: Parse methods
    
    public func handleLockAccountResponse(success:@escaping(lockAccountResponseHandler), fail:@escaping(lockAccountResponseHandler), status: Bool, response: Any?) {
        let message:String = Constants.kErrorMessage
        if status {
            success(LockAccount.LockAccount.Response(message: "Account locked successfully")!)
            return
        }
        fail(LockAccount.LockAccount.Response(message:message)!)
    }
}
