//
//  PhoneVerificationWorker.swift
//  SpiralPay
//
//  Created by Zoeb on 07/02/18.
//  Copyright (c) 2018 EnvisionWorld. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias smsPhoneVerificationResponseHandler = (_ response:PhoneVerification.SmsPhoneVerification.Response) ->()

class PhoneVerificationWorker
{
    func sendSmsForPhoneVerification(request: PhoneVerification.SmsPhoneVerification.Request, successCompletionHandler: @escaping smsPhoneVerificationResponseHandler, failureCompletionHandler: @escaping smsPhoneVerificationResponseHandler)
    {
        RequestManager().sendSmsForPhoneVerification(request: request.baseRequest()) { (status, response) in
            self.handleSendSmsForPhoneVerificationResponse(success: successCompletionHandler, fail: failureCompletionHandler, status: status, response: response)
        }
        
    }
    
    //MARK: Parse methods
    
    public func handleSendSmsForPhoneVerificationResponse(success:@escaping(smsPhoneVerificationResponseHandler), fail:@escaping(smsPhoneVerificationResponseHandler), status: Bool, response: Any?) {
        var message:String = Constants.kErrorMessage
        if status {
            if let result = response as? PhoneVerification.SmsPhoneVerification.Response {
                success(result)
                return
            }
        }
        else {
            if let result = response as? PhoneVerification.SmsPhoneVerification.Response {
                fail(result)
                return
            }
            else
            {
                if let result = response as? String {
                    message = result
                }
            }
        }
        fail(PhoneVerification.SmsPhoneVerification.Response(message:message)!)
    }
    
}
