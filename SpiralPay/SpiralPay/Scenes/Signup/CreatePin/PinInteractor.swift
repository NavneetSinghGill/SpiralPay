//
//  PinInteractor.swift
//  SpiralPay
//
//  Created by Zoeb on 02/02/18.
//  Copyright (c) 2018 EnvisionWorld. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PinBusinessLogic
{
    func doCustomerRegistration(request: Pin.CustomerRegistration.Request)
    func doLogin(request: Pin.Login.Request)
}

protocol PinDataStore
{
  //var name: String { get set }
}

class PinInteractor: PinBusinessLogic, PinDataStore
{
  var presenter: PinPresentationLogic?
  var worker: PinWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func doCustomerRegistration(request: Pin.CustomerRegistration.Request)
  {
    worker = PinWorker()
    worker?.postCustomerRegistrationWith(request: request, successCompletionHandler: { (response) in
        User.shared.accessToken = response.accessToken
        User.shared.customerID = response.customerId
        
        self.presenter?.customerRegistrationSuccess(response: response)
    }, failureCompletionHandler: { (response) in
        self.presenter?.customerRegistrationFailed(response: response)
    })
  }
    
    func doLogin(request: Pin.Login.Request) {
        worker = PinWorker()
        worker?.postDoLoginWith(request: request, successCompletionHandler: { (response) in
            self.presenter?.loginSuccess(response: response)
        }, failureCompletionHandler: { (response) in
            self.presenter?.loginFailed(response: response)
        })
    }
    
}
